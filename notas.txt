¿Por qué se usa linux en servidores?
	
	Es:
		* Seguro
		* Estable
		* Totalmente personalizable
		* Constantes actualizaciones
		* Libre
		* Gratis
		* La comunidad
		* Flexibilidad: es posible crear una distro de linux que se ajuste a nuestras necesidades.


Configuración y guia básicas usando virtualbox

	>> ifconfig 
	# para mostrar las interfaces de red del equipo

	-- Conectar por red el host con mi maquina virtual:
		1. Abrir las configuraciones de la maquina virtual.
		2. Ir a red.
		3. En conectado a: Adaptador puente.
		4. En el menu de virtualbox. Archivo - Preferencias - Red - Redes solo-anfitrión. 
		5. Crear la red ''


	# Este comando copia la llave publica de mi maquina local y la copia en el archivo de llaves autorizadas del sevidor
	>> ssh-copy-id -i .ssh/id_rsa.pub user@ipdelservidor	



Iniciar un servidor Linux con AWS

	Puerto 22: Es el que usa el servicio de SSH

	>> ssh -i 'nombre de la llave.pem' usuario@ipdeldervidor
	## de esta manera nos conectamos a un servidor AWS. El flag -i nos permite elegir la llave a utilizar



Manejo de sesiones remotas con tmux y ssh

	Crear un archivo 'config' en la carpeta .ssh/ . Este contiene la configuración de las llaves ssh que tenemos en el pc local.

		La primera linea de la configuración es el nombre que le vamos a dar al Host.

	Despues de tener listo el archivo:

		>> ssh ServerPersonal # o el nombre que hayamos dado
		## con esto nos conectamos al servidor sin usar la IP


	Instalar tmux dentro del servidor
		Para poder tener varias terminales dentro de la misma conexión 

		>> sudo apt-get install tmux

		>> tmux # para iniciar la aplicación

		CTRL + B y 'c' abre una nueva terminal. c de create
		CTRL + B y 'n' para movernos dentro de esas terminales. n de next
		CTRL + B y 'd' para desconestarnos de la sesión 
		>> tmux attach ## Para recuperar las sesiones que tenia abiertas en caso de desconección



Editores de texto en linux
	
	VI / VIM

	Vim es un fork de Vi



Editar archivos con VIM

	>> vim [nombre del archivo]
	
	- Al dar el comando de arriba Vim crea un archivo y lo abre el modo de comandos. Para insertar texto presiono 'i'
	- Para volver al modo comandos 'esc'
	- 'v' modo visual para copiar texto,

	Comandos para desplazarse por un archivo

		h - Se desplaza un espacio a la izquierda.
		l - Se desplaza un espacio a la derecha.
		k - Se desplaza una línea hacía arriba.
		j - Se desplaza una línea hacía abajo.

	Comandos de inserción

		a - Agrega texto después del cursor y entra al modo de inserción.
		A - Agrega texto al final de la línea y entra al modo de inserción.
		i - Inserta texto antes del cursor y entra al modo de inserción.
		I - Inserta texto al inicio de la línea y entra al modo de inserción.
		o - Abre una línea debajo del cursor y entra al modo de inserción.
		O - Abre una línea encima del cursor y entra al modo de inserción.

	Comandos de deshacer y reemplazar

		u - Revierte la última modificación.
		U - Revierte todas las modificaciones hechas en la línea actual
	
	Comandos para encontrar texto

		/ - Buscar una cadena de caracteres a partir del cursor hacía el fin del archivo.
		? - Buscar una cadena de caracteres a partir del cursor hacía el inicio del archivo.
		n - Ir a la siguiente cadena que coincida con la que se busca en el archivo.
	
	Comandos para guardar y salir

	:w - Guardar (salvar) el archivo.
	:q! - Salir sin guardar.
	:wq - Guardar todas las modificaciones y salir.



Añadir y administrar repositorios

	Los repositorios son una lista de paquetes, que pueden ser oficiales de la distribución.

	En el archivo /etc/apt/source.list, se guardan las fuentes de los repositorios que va a consultar el sistema. Cada fuente contiene una URL, configuración y versión del paquete.

	El comando apt-get update actualiza la informacion de las fuentes listadas en 'source.list'


	>> apt-cache search keyring  ## para buscar los anillos de seguridad y versiones de los repositorios que se encuentran en el sistema.


Instalar, actualizar y remover programas en linux

	>> apt-get install [nombre del paquete]## para instalar paquetes

	>> apt-get install aptitude ## Para instalar aptitude que es un manejador de paquetes
	>> aptitude ## Para arrancar el programa

		Dentro de aptitude '/', sirve para buscar paquetes

		+ Para seleccionar el paquete a instalar o subir de versión.
		- Para desinstalar
		= Para dejarlo como estaba

	* apt-get remove [nombre paquete] ## desinstala un paquete con seguridad, pero deja los archivos de configuración y bases de
		 datos.

	* apt-get purge [nombre paquete] ## borra todo.
	  dpkg -P [nombre paquete]  ## igual que arriba



Empaquetar y comprimir archivos en linux

	* Empaquetar: Reunir varios archivos o directorios y unirlos en un solo.
	* Comprimir: Reducir el tamaño de un archivo, generando una versión comprimida sin perder información.

	*tar* es un programa que permite empaquetar.
	*gzip* es un programa que permite comprimir.

	# Empaquetar
	>> tar cvf [ruta/nombre directorio].tar [ruta/nombre del directorio a empaquetar] > retorna cod.tar

	# comprimir
	>> gzip -9r [archivo a comprimir]  > retorna doc.tar.gz

	# Empaqueta y comprime
	>> tar cvfz archivo.tar.gz [carpeta a comprimir] 

	# Descomprime y desempaqueta un archivo . C = Comprime X = extrae
	>> tar xvfz archivo.tar.gz

	- c --> para empaquetar
    - x --> para desempaquetar
    - zc --> empaqueta y comprime en gzip
    - zx --> empaqueta y comprime en gzip
    - jc --> empaqueta y comprime en bzip2
    - jx --> empaqueta y comprime en bzip2
    - Jc --> empaqueta y comprime en xz
    - Jx --> empaqueta y comprime en xz


   Tar mantiene permisos, usuario, grupo


 Compilar un programa en linux

 	Proceso para compilar:
 		1. Instalar el asistente de compilación:
 			>> sudo apt-get install module-assistant

		2. Preparar el sistema, instalando los paquetes requeridos:
			>> sudo m-a prepare

		3. Agregar fuente de datos habilitando fuentes deb-src:
			>> sudo vim /etc/apt/source.list

		4. Instalar dependencias del paquete
			>> sudo apt-get biuld-dep [nombre del paquete]

		5. Compilar
			>> sudo apt-get source -b [nombre del paquete]



Donde encontrar la documentación de los programas

	Toda la documentación de los paquetes se encuentra en: /usr/share/doc

	* Para ver el contenido de un archivo comprimido sin extraerlo: zless [nombre archivo]


Gestores de paquetes en linux

	Sistema de gestión de paquetes:
		Es un conjunto de herramientas que permite la automatización de los procesos de instalación,
		configuración, actualización y eliminación de paquetes de software. El termino gestor de paquetes
		es comúnmente utilizado en los sistemas *NIX, especificamente en GNU/Linux, en el que la mayoria
		de las distribuciones tiene su sistema gestor.

	Sistema de repositorios de software
		Son sitios centralizados donde esta la metadata, el código fuente y los binarios del software
		disponible para instalar atravez del sistema de gestión de paquetes.


	YUM (Yellowodg Updater, Modified) - Fedora, CentOS

		Es una herramienta de código abierto desarrollada en python utilizada para hacer la instalación 
		de paquetes de software en distribuciones que usan RPM (RPM Package manager) como formato de 
		empaquetamiento, como Red Hat, Fedora, CentOS, Suse y Mandriva.

		Algunos comandos YUM son:

			* # para instalar software:
				>>> yum install
		
			* # para desintalar:
				>>> yum remove

			* # para actualizar software
				>>> yum update

	APT (Advanced Packaging Tool) - Debian, Ubuntu y sus derivados

		APT no es en sí un sistema gestor de paquetes directo al usuario sino un conjunto de librerías C++ que
		utilizan otros programas para la distribución de paquetes de software como apt-get, apt-cache y aptitude.
		APT se utiliza más que todo para la gestión de software que viene empaquetado en formato deb, utilizada en
		sistemas Debian y derivados.

		Algunos comandos de apt-get y aptitude son:

		* # Para instalar un software:
			>>> aptitude | apt-get install 

		* # Para desinstalar un software:
			>>> aptitude | apt-get remove 

		* # Para actualizar un software:
			>>> aptitude install "" paquete="">| apt-get  --only-upgrade install 

		* # Para actualizar todo el sistema:
			>>> aptitude safe-upgrade | apt-get upgrade


Estructura de archivos en linux

	Todo en Linux son archivos o directorios.

	* Directorios:
		/			Directorio raíz
		/home		Donde se almacenan los archivos de los usuarios
		/lib 		Contiene las librerias del sistema (lib64: son para 64 bits)
		/mnt 		Donde se montan las USB y CD o discos externos * tambien es /media
		/opt 		Los programas de terceros que no tiene una estructura oficial dentro de la distribución (google, spotify)
		/proc 		sistema de archivo virtual que lo crea y destruye el sistema. Contiene informacion del mismo. (forma anarquica)
		/root		Cartera exclusiva para el administrador es un /home diferente para el usuario root
		/sbin 		Binarios para el super usuario
		/bin 		Binarios para el resto de usuarios
		/tmp		Almacenamiento de archivos temporales
		/usr 		Instalados los programas que estan por defecto
		/var 		se utiliza para guardar archivos de logs, backups, servidor web
		/var/log
	>	/etc 		Archivos de configuración del sistema. Lo que no esta hay no esta en el sistema. Usuarios, permisos, Conf BD
		/boot 		guarda los archivos del arranque del sistema.
		/dev 		guarda las definiciones de todos los dispositivos.
		/lost+found espacio temporal donde se guardan datos que se recuperan despues de la caida del sistema.
		/media 		cuando montamos en el sistema dispositivos, los podemos ver en esta carpeta.
		/run 		datos variables en tiempo de ejecucion. Informacion del sistema desde el ultimo booteo.
		/srv 		archivos de datos especificos para cada servicio instalado en el sistema.
		/sys 		evolucion de /proc pero localizado de forma jerarquica.


Administración de discos y particiones en linux
	
	El disco que cree en DigitalOcean quedo /dev/sda/
	La hacer la primera partición quedo /dev/sda1
	La segunda partición quedo /dev/sda2


	>> fdisk -l   ## Muestra el sistema de memorias y discos del equipo
	>> fdisk /dev/[nuevo disco]  ## abre fdisk


	Tipos de particiones
		Existen dos tipos de tablas de particiones: ()
			- La tradicional que permite 4 particiones primarias y muchas lógicas 
			(las particiones lógicas sirven como contenedores para más particiones).

			- gpt que permite tener muchas más particiones.

	Crear partición
		Ejecutamos fdisk /dev/xvd para ingresar al disco.
		Creamos una nueva partición con n
		Sí es la primera partición debemos crear una primaria, usamos el comando p
		Seleccionamos el tamaño de la partición, diciendole +20G

	Cambiar tipo de partición
		Ejecutamos fdisk /dev/xvd para ingresar al disco.
		Seleccionamos el número de la partición.
		Seleccionamos t
		Elegimos el número del tipo de partición.

	Eliminar partición
		Entramos a fdisk especificando el disco duro.
		Usamos el comando d
		Seleccionamos la partición.
		Guardamos cambios con w

	Guardar los cambios
		Con w guardamos los cambios que realizamos, si salimos sin guardar la configuración que hacemos no se va a escribir
		en el disco.
		Ver tabla de particiones

	Con el comando fdisk -l podemos ver cómo estan distribuidas las particiones.


Formateo y montaje de particiones en Linux
	
	Existen muchos tipos de sistemas de archivos, cada uno tiene características que lo hacen útil para diferentes dispositivos.

	Formatear particiones
		El comando mkfs nos permite formatear una partición usando el sistema de archivos que queramos.

		- Formato con FAT32: Podemos ejecutar el comando mkfs.vfat /dev/xvdf1 para formatear la partición xvdf1 con FAT32.
		- Formato con EXT3: Podemos ejecutar el comadno mkfs.ext3 /dev/xvdf5 para formatear la partición xvdf5 con EXT3.
		- Formato con EXT4: Podemos ejecutar el comadno mkfs.ext4 /dev/xvdf6 para formatear la partición xvdf6 con EXT4.
		- Formato con XFS: Podemos ejecutar el comadno mkfs.xfs /dev/xvdf6 para formatear la partición xvdf6 con XFS.

	Montar las particiones
		Debemos crear un directorio por cada partición que deseamos montar, en este caso usamos tmp dentro de esta carpeta
		podemos ejecutar:

			>> mkdir xvdf1
 			>> mkdir xvdf3
			>> mount /dev/xvdf1 /tmp/xvdf1
			>> mount /dev/xvdf3 /tmp/xvdf3
					 [disco]    [carpeta a montar]

	Desmontar una partición
		Para poder desmontar una partición, debes no estar sobre la partición. Puedes ejecutar el comando:
			
			>> umount /tmp/xvdf1
			
			En este caso /tmp/xvdf1 es donde tenemos montada la partición.

	Listar puntos de montaje

		El comando df -h nos lista los directorios que están montados y el espacio que tienen disponible.

	Montar particiones automaticamente
		Sí queremos montar las particiones de forma automatica podemos ir al archivo /etc/fstab, añadimos:
			
			/dev/xvdf3    /var_new    ext4    defaults,discard    0 0


Administración swap en linux

	Es útil para maquinas con poca RAM

	>> free   ## Muestra el uso de RAM y Swap. free -m muestra el dato en megas

	>> htop  ## Es como free pero más avanzado. No viene por defecto (apt-get install htop)

	- Con el comando mkswap [nombre de la partición swap] formateamos la partición de tipo swap.
	- Con el comando swapon [nombre de la partición swap] activo la partición swap.
	- Con el comando swapoff [nombre de la partición swap] desactivo la partición swap.

**********
	https://joaquinaraujo.github.io/platzi_administracion-linux/

	## Link con un super resumen

**********

Generar imagenes de discos duros
	
	>> sync ### para sincronizar los cambios del disco duro. Aveces los discos hacen cache

	Crear imágenes con dd
		dd nos permite sacar una imágen completa del disco duro, para realizar la imagen.
		
		Primero debemos estar seguros que tenemos la partición desmontada.
		Usamos el comando:
			>> dd if=/dev/xvdf6 of=/var_new/backup/backup_xvdf7 bs=1MB
				# if es la partición que deseamos hacer la imágen, of donde se va a guardar la imágen.

	Montar una imagen con loop
		Primero debemos activar el módulo del kernel con >> modprobe loop.

		Una vez activo, creamos una carpeta donde vamos a montar la imágen, con: (la imagen la bajo de internet con wget [url])
			>> mkdir /tmp/iso_debian
			## recuerda puedes seleccionar la ruta que desees.

		Ahora con el comando:
			>> mount debian.iso /tmp/iso_debian -o loop   ## estamos montando la imágen.

	Recuerda debes estar seguro de la ruta del archivo, puedes ir autocompletando la ruta con tab

	Escribir un archivo lleno de creamos

		En linux existe una ruta /dev/zero esta siempre va a devolver cero.

		Podemos crear el archivo con:
		
			>> dd if=/dev/zero of=zeros100M bs=1M c=100

	Leer un archivo para medir la velocidad del disco

		En Linux existe una ruta /dev/null la cual todo lo que enviemos va a desaparecer.

		Podemos medir la velocidad de un disco leyendo un archivo, enviando la información a null con:
			>> dd if=zeros100M of=/dev/null


Administrar particiones GPT

	Formas de arrancar el sistema:

		- MBR: Es muy vieja que coloca 512 bytes al inicio del sector donde se inicia el sistema. La BIOS busca esos primeros 
			512 bytes que son los que indican donde esta el kernel, la librerias y todo lo necesario para arrancar.

		- UEFI: Buscar tener una capa de seguridad. Y permite buscar errores en los controladores del pc

	GPT vs fdisk : Gpt permite hasta 128 particiones

	Saber tipo de tabla de particiones
		Con fdisk -l /dev/xvda, muestra el tipo de la tabla de partición.

	Tabla de particiones GPT
		GPT permite tener 128 particiones en un disco duro.
		gdisk es un comando especial para particiones GPT.
		
		Crear particiones con gdisk
			- Usamos el comando gdisk /dev/xvdh para acceder a configurar las particiones del disco.
			Recuerda debes seleccionar el disco que deseas configurar.

			- Usamos la opción n para crear una nueva, y seleccionamos el número de la partición.
			- Asignamos el tamaño de la partición en este caso +1G
			- Seleccionamos el tipo de partición, por ejemplo 8300 para cargar tipo Linux filesystem


Administrar el arranque del sistema GRUB
	
	El GRUB es gestor de arranque, que permite cargar el kernel y el sistema.

	Archivos de configuración
		En la carpeta /etc/grub.d vemos los archivos del grub.
		/boot/grub/grub.cfg es el archivo de configuración, pero no modifiques este archivo, para configurarlo usa /etc/grub.d

	El grub se coloca en el MBR, que esta en los primeros 512 Bytes del disco.
	Backup del MBR

	Podemos generar un backgrup del MBR con dd
		>> dd if=/dev/dvda of=/root/mbr_backup bs=512 count=1

	Actualizar grub
		update-grub2

	Instalar grub
		grub-install /dev/xvdf


Administrar discos duros con LVM
		
	Permite agregar, sin importar los discos que se tengan, agragar más discos en tiempo de ejecución.

	>> apt-get install lvm2

	Una forma grafica de entender como funciona LVM

		 ________	 ________	 ________    ________
		|		 |  |        |  |        |  |        |
		|volumen |	|volumen |  |volumen |  |volumen |
		| fisico |	|fisico  |  |fisico  |  |fisico  |
		|________|	|________|  |________|  |________|

      __________________________________________________
     |                                                  |  
     |                 volume group                     |   
	 |   ________    ________    ________    ________   |
	 |	|		 |  |        |  |        |  |        |  |
	 |	|volumen |	|volumen |  |volumen |  |volumen |  |
	 |	| fisico |	|fisico  |  |fisico  |  |fisico  |  |
	 |	|________|	|________|  |________|  |________|  |
     |__________________________________________________|

      ___________________________________________________
	 |                 |                                 |    
     |               vo|lume group                       |
	 |   ________    __|______    ________    ________   |
	 |	|		 |  |  |      |  |        |  |        |  |
	 |	|volumen |	|vo|lumen |  |volumen |  |volumen |  |
	 |	| fisico |	|fi|sico  |  |fisico  |  |fisico  |  |
	 |	|________|	|__|______|  |________|  |________|  |
     |                 |                                 |
	 | volumen         |        volumen                  |
     | logico 1        |        logico 2                 | 
     |_________________|_________________________________|


		- Volumen fisico - Physical Volumes (PV): discos fisicos, particiones, volumenes RAID
		- Grupos - Volume Groups (VG): contiene 1 o mas volumenes fisicos, se redimenciona agregando o quitando 
		  volumenes fisicos
		- Volumen logico - Logical Volumes (LV): divide los grupos, se redimenciona en “caliente”

	Crear volumenes fisicos:

		1. Agregar discos fisicos y darles tipo LVM: con fdisk [8e]
		2. Agregar la partición a los volumenes físicos del LVM:
			>> pvcreate /dev/[nombre partición]
		3. Listar los discos LVM existentes

		** >> pvremove [/dev/nombre disco / partición]
			## para remover un disco o partición LVM

	Crear un grupo:

		{ 
			En el ejercicio tengo 2 discos cada uno de 10GB:
				- Hago una particion del primer disco de 5GB
				- Agrego a LVM la particion que cree más el segundo disco completo.
				- Es como si ahora tuviera un disco de 15GB
		}

		1. >> vgcreate [nombre del grupo] [disco o partición a usar]
			## para agregar la particion a un grupo

			** >> pvscan 
				## para listar las particiones que estan agregadas en los volumenes fisicos del LVM.

			** >> pvs 
				## lista los volumenes logicos

		2. >> vgextend [nombre del grupo] [disco o partición]
			## agregar más particiones a un grupo

		3. >> vgreduce [nombre grupo] [nombre del volumen]
			## retira el volumen del grupo

			** >> vgdisplay
				## lista y detalla los grupos existentes

			** >> vgs
				## lista los grupos existentes

	Volumenes logicos:

		1. lvcreate -n [nombre del volumen logico] -L [tamaño]g [nombre del grupo]		
			## crea un volumen logico

		** >> lvs
			## lista los volumenes logicos

		** >> mkfs.ext4 /dev/[nombre grupo]/[nombre volumen logico]
			## Para dar formato al volumen logico

		2. lvextedn +L[tamaño]G dev/[nombre grupo]/[volumen logioco]
			## para extender el tamaño del volumen logico ESTO ES POSIBLE EN CALIENTE

		3. Luego de extender el tamaño del volume logico hay que ejecutar lo siguiente para que come los cambios:

			>> resize2fs /dev/[nombre grupo]/[volumen logico]


Apagar servidores de forma remota
	
	Antes de apagar un servidor tener en cuenta:

		1. Revisar en cual servidor esta conectado.
		2. Linux no pregunta confirmaciones.
		3. Es diferente apagar y reiniciar.

	Reinicar:

		>> shutdown -r now
					-r == reiniciar, now == ahora

		>> systemctl reboot

	Apagar:

		>> systemctl poweroff


Arrancando el sistema runlevels, systemd

	{
		Esto es como los servicio de windows para que esta arriba y que abajo
	}
	
	Todo sisema linux tiene cierta forma de arrancar, lo importante son los niveles donde se estan ejecutando las
	cosas.

		Existen 6 niveles de servicio por defecto:
			1. Modo usuario.
			2. Modo multiusuario - soporte sin red.
			3. Modo multiusuario - con soporte de red.
			4. 
			5. Interfaz grafica.
			6. Reinicio

		** Estos niveles se pueden ver en: /etc/rc0.d - rc1.d ...... - rc6.d
			Estas carpetas contienen diferentes scripts que son los que se ejecutan dependiendo del proceso 
			que se este realizando: Arranque o Cierre.

			** Ejemplo: 
				>> ls /etc/rc1.d

				K01atd
				K01killprocs
                S02single
				S01killproc

			  Donde la S (start) en arranque, osea se ejecuta cuando el sistema arranca y K (kill) cuando el sistema esta cerrando,
			  los números que siguen a la letra inicial representa el orden en que se ejecutan estos scripts.

	** >> runlevel
		Muestra en que nivel se estan ejecutando los procesos.

	** >> systemctl
		## Permite saber un arbol de procesos, indicando las dependencias de estos. Como los servicios de windows.

	** >> systemctl list-dependencies [nombre servicio]
		## para la lista de dependencias del servicio.

	** >> systemctl show [servicio]
		## ver un servicio

	** >> systemctl cat [servicio]
		## se puede ver donde esta arrancando y cual es el script que usa el servicio

	** >> ps aux | grep [sevicio]
		## muestra los procesos que estan corriendo para el servicio

	** >> systemctl status [servicio]
		## muestra el estado del servicio

	Cuando mato el proceso de Mysql el servicio se levanta inmediatamente. Esto es porque el archivo de
	configuración (para saber el archivo *systemctl cat [servicio]*) contiene, para este caso, en la 
	sección SERVICE la opcion RESTART=on-failure, que es reiniciar en caso de falla.

	** >> systemctl deamon-reload
		## si hago cambios en los archivos de configuración de arranque de algún servicio debo recargar para
			tomar los cambios. Para eso este comando.

	** >> systemctl restart [servicio]
		## para reiniciar un servicio

	
Uso de variables de entorno, bashrc, profile

	Las variables de entorno permiten configurar diferentes ambientes como desarrollo o producción,
	tambien llaves de seguridad.

	## Para crear una variable de entorno, en la terminal:
		>> [NOMBRE VARIABLE]=['valor']

	## imprimir la variable
		>> echo $[nombre de la variable]

	## Listar las variables de la sesión actual
		>> export


	- La variable PATH contiene las rutas de los binarios

	En el archivo .bashrc se pueden guardar variables para el usuario que esta logueado y que no desaparezcan 
	en cuanto se reinicia el sistema.

	El archivo .profile que afecta al bash profile

	El archivo /etc/profile afecta a todos los usuarios
		Para insertar una variable de entorno agregar el archivo de arriba:

			>> export [NOMBRE DE LA VARIBLE]=[valor de la variable]

	/etc/bash.bashrc” para editar y agregar variables de entorno para todos los usuarios.



Uso de redireccionamiento y pipes para logs.

	Una tarea comun de un administrador de servidores es leer logs.

	Algunas herramientas para tener en cuenta a la hora de leer logs:

		** encuentro los logs en /var/log
		1. less [nombre del archivo]
		2. more [nombre del archivo]
		3. grep -r "25/Nov" ## filtrar información. Busca los del 25 de nov en todos los archivos.
		4. wc [nombre archivo]  ## contar lineas.
		5. gawk  ## separa el archivo por columnas.
		6. '>' que permite escribir el resultado de un comando en un archivo (pip freeze > requeriments.txt)
			tambien se puede usar >> para que no sobre escriba si no que agregue.
		7. head [nombre archivo]	## muestra el inicio de un archivo.
		8. tail [nombre archivo]	## muestra el final de un archivo.
			tail -f [nombre archivo]	## muestra el final del archivo en tiempo real

		** tail -f /var/log/syslog
			## muestra la información del servidor, que esa haciendo, como se esta conectando.


Monitorear, eliminar y establecer prioridades en procesos

	Los procesos permiten al sistema operativo trabajar, definiendo cuando se debe procesar información.

	Los procesos en Linux están encapsulados, esto quiere decir que el usuario que lanzó el proceso es quien lo
	debe quitar.

	>> ps aux 			## Permite los procesos que se están ejecutando

	>> ps aux | grep mysql 		## hace un pipe para filtrar todo lo que contenga mysql

	** Cuando se ejecute un proceso es mejor hacerlo con un usuario que no sea el root, con esto se encapsulan los 
	procesos y si llegase haber un ataque solo se veria afectado este usuario y no el sistema completo.

	>> htop		## Para ver los procesos de una mejor forma

		load average [cantidad de procesos ejecutados en el ultimo minuto] [ultimos 5 min] [ultimos 15 min]
			## El primer numero representa las cpu's que se están usando este número nunca debe ser mayor al
			total de cpu del pc

	>> ps tree 		## para ver el arbol de procesos
			
	>> kill -9 [PID]  ## kill para matar un proceso -9 para hacerlo sin importar que
			-15 para cerrar un proceso de forma correcta

	Todos los procesos tienen una prioridad: se conoce con 'nice', estos tienen un valor entre -20 y 19, donde
	-20 es el de mayor prioridad.

	Dentro de htop se puede modificar el nice

	>> nice 	## para modificar el nice

	

Enlaces duros, simbólicos y sistemas de backups

	** >> du -sh * 		## muestra en orden ascendente el tamaño de los archivos y directorios dentro del que me encuentre
	
	- Enlace simbólico: es como un acceso directo (un archivo sin datos, que solo contiene una referencia a la ubicación del 
		archivo original)

		>> ls -s [ruta directorio padre (puede ser un archivo)] [ruta directorio simbolico (se puede cambiar el nombre del archivo)] 
			** si modifico el archivo desde el enlace se modifican los dos

	- Enlace duro: apuntan fisicamente al mismo archivo en el nodo del disco duro
		>> ln [ruta padre] [ruta hijo]

		** solo se pueden de archivos no directorios
		** sirve para backups si se borra el archivo del padre queda el del hijo


*****
apt-get install tree

## para ver el arbol de directorios

*****


Manejo de usuarios y grupos

	Linux es un sistema multiusuario, cada usuario puede correr con diferentes configuracion, permisos, etc.

	>> adduser [nombre del usuario]
		## para crear un usuario, este programa usa 'useradd' que es el programa por defecto, adduser nos da más ventajas.

	>> su - [usuario] 
		## para cambiar de usuario

	>> groups
		## muestra los grupos a los que pertenece el usuario loggeado

	>> addgroup [usuario] [grupo]
		## para añadir a un grupo el usuario. Para que tome los cambios debe reiniciar sesión.

	>> delgroup [usuario] [grupo]
		## para sacar de un grupo a un usuario

	>> whoami
		## para ver el usuario actual

	>> deluser [usuario]
		## Para eliminar usuarios

	>> passwd [usuario]
		## para cambiar la contraseña de un usuario

	** En /etc/passwd están todos los usuarios del sistema.
	** En /etc/group están todos los grupos del sistema.
	** En /etc/shadow están todas las contraseñas de los usuarios. ## editando este archivo se pueden deshabilitar
	   las contraseñas de los usurios


Generar backup de bases de datos
	
	Existen muchas formas de generar un backup, en este video veremos algunas de las formas:
    	- En amazon puedes generar una imagen de la instancia en la que estás trabajando.

	- Generar un backup de la base de datos:
	>> pg_dump [base de datos ] > backup.2017.sql

	- Restaurar una base de datos
	>> psql[base de datos ] < backup.2017.sql

	Es una buena práctica nombrar el archivo con el nombre de la base de datos y la fecha.



Uso de socat y manejo de redireccionamiento de puertos

	Socat sirve para redireccionar el trafico entre puertos.

	## instalar socat
	>> apt-get install socat

	- Crear redireccionamiento:
	>> socat TCP-LISTEN:8080, fork, reuseaddr TCP:localhost:80
		## Redirecciona todo el tráfico del puerto 8080 al 80

	- Redirección UDP:
	>> socat UDP-LISTEN:80,reuseaddr,fork TCP4:localhost:8080	


Tareas programadas y como monitorearlas

	crontab: ver las notas del curso de terminal

	** en la carpeta /etc/cron.d  se pueden añadir scripts para que se ejecuten cada cierto tiempo


Seguridad del kernel

	Es la pieza fundamental del sistema, el interactua entre el hardware y los programas que se ejecutan.

	** Modificar limites
	>> vim/nano /etc/security/limits.conf 	## en este archivo se encuentran los limites del kernel

	soft  nofile  32000
  	hard  nofile  35000  

  	De esta forma estamos estableciendo la cantidad de archivos que puede abrir el sistema al tiempo

  	** sysctl -p  ## para aplicar los cambios realizados



 Permisos de archivos

 	Los permisos nos permiten controlar la seguridad de acceso a cada archivo o directorio del sistema. Permiten ver de que usuario
 	vienen y que usuario puede hacer que dentro de ese archivo o directorio.

 	>> ls -l 	## para ver los permisos

 		-rw-rw-r		## el primero son los permisos del usuario, el siguiente los del grupo, y el último los de los demas usuarios 
 						   del sistema.


 	>> chmod [bloque][+ o -][permiso] [archivo o directorio]
 		## Permite cambiar los permisos. El parámetro [bloque] define si es el usuario, el grupo o los otros usuarios.
 		   Los parámetros [+ o -] para agregar o eliminar (a lo que ya tiene). El parámetro [permiso] si es de lectura (read),
 		   escritura (write) o ejecución (execution).


 	>> chmod 755 [archivo o directorio]
 	   ## Permite cambiar los permisos. Lectura (read) tiene un valor de 4, escritura (write) un valor de 2 y ejecución (execution)
 	      un valor de 1, la sumatoria entre todos esos da 7, es lo mismo que decir (cada digito representa: usuario, grupo, otros):

 	       	>> chmod o+rwx [archivo]

 	>> chmod u=rwx,g=,o= [archivo o directorio]
 	   ## Permite cambiar los permisos. Usuario tiene permiso de lectura, escritura y ejecución, el grupo no tiene ningún permiso y 
 	      los otros usuarios tampoco.


****************
Para ejecutar scripts desde un archivo este debe ser .sh y debe tener la estructura:

#!/bin/sh

cuerpo del script

****************

	** los archivos que están dentro de la carpeta /tmp solo se pueden borrar por el dueño del archivo, esto porque esta carpeta tiene 
		un sticky, que es una 't' al final cuando se ejecuta ls -l

	- Cambiar propietario de un archivo:

		>> sudo chown [usuario nuevo dueño]:[grupo] [archivo]
			## con ':' cambia automaticamente el grupo si este cambia solo el usuario


Configuración de red

	Ver la configuración de interfaces de red
		>> ifconfig

	Inicializar la interfaz
		>> dhclient eth1

	Archivos de configuración
		/etc/network/interfaces
		/etc/network/interfaces.d

	Activar DHCP automatico
		En el archivo interfaces.d agregamos la línea:

			iface eth1 inet dhcp

	Apagar inferface de red
		>> ifdown eth0

	Multiples ip sobre una misma interface
 		>> ifconfig eth0:0 192.168.10.5

	Comando ip: Con este comando podemos sustituir ifconfig

		>> ip addr show, mostar las direcciones

	Enrutamiento
		Para ver la tabla de enrutamiento se puedes usar route -n



Como manejar mi firewall
	
	Ver reglas de IPTABLES de forma mas clara
		>> iptables -nL

		input: los paquetes que entran
		output: paquetes que salen
		forward: paquetes que llegan y se redireccionan

	Configurar acceso a todas los paquetes, de añadir una regla seria para bloquear o condicionar alguna conexión.
		>> iptables -P INPUT ACCEPT

	Bloquea acceso a todas los paquetes, de añadir una regla seria para permitir o condicionar alguna conexión.
		>> iptables -P INPUT DROP

	Permitir acceso a paquetes desde un puerto especifico (puerto 22)
		>> iptables -A INPUT -p tcp --dport 22 -j ACCEPT

	Permitir acceso a paquetes desde la red LOCAL (todas las ip privadas)
		>> iptables -A INPUT -s 192.168.0.1/24 -j ACCEPT

	Regla para que entren los paquetes a través de conexiones establecidas o relacionadas (como por ejemplo, HTTP).
		>> iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

	Borrar alguna regla especifica
		>> iptables -D INPUT [Numero de la regla]

	Borrar todas las reglas
		>> iptables -F

	Respaldar reglas de iptables
		>> iptables-save > /etc/iptables.rules

	Restaurar las reglas de ip tables
		>> iptables-restore < /etc/iptables.rules


Manejo de DNS y dig

	El DNS permite mapear un nombre a una dirección IP

	** El archivo /etc/hosts contiene una lista de ip y nombres asignados. 

		[ip] [dominio]

		Entonces cuando yo coloque un dominio en mi pc me va a dirigir a la ip que tenga en el archivo hosts

	Los distintos tipos de DNS son:

		A - IPv4
		CNAME - nombre
		MX - correo
		AAAA - dirección IPv6
		TXT - texto
		PTR - dns reverso

	Consultar dominios
		>> apt-get install dnsutils

		>> dig linux.platzi.com a dns oficiales
		>> dig linux.platzi.com @[servidor dns] a un servidor especifico


Instalación de NTP

	NTP es un servicio que permite sincronizar la hora.

	Instalación
		>> apt-get install ntp

	Consultas
		>> ntpq permite hacer consultas al servicio

	Activar
		>> ntpdate-debian selecciona un servidor y hace la configuración.

	Archivo de configuración
		/etc/default/ntpdate

	Mantener la hora sincronizada sirve para mantener los logs del sistema actualizados. Un atacante puede modificar la fecha del
	sistema, dañar el sistema, y volver a colocar la hora actual, cuando esto pasa no hay forma de saber la hora real del ataque.



Auditoria de login y logs

	>> who 	## muestra los usuarios conectados
	>> w 	##quién está conectado y hace cuanto estan inactivos
	>> tail -f /var/log/auth  ## queda registrado todos los intentos de acceso



Tuneles con ssh, autossh, y socat

	Abrir un túnel en el servidor
		>> ssh -Ng -L9898:localhost:80 -i platzi

	Aceder a la máquina local
		>> ssh -NR 10022:localhost:22 -i platzi
		>> ssh -p 10022 usuario@localhost

	Crear proxi
		>> ssh -N -D10090 platzi


Backup de archivos de configuración con etckeeper
	
	Cuando mantenemos un gran sistema necesitamos tener auditoria de las acciones en el servidor.

	- backup de etc/
		** Con etckeeper podemos guardar la configuraciones de etc, usando git. Instala git dentro /etc y hace un commit inicial
		
		Instalación:
			>> apt-get install etckeeper
		
		Guardar cambios:
			>> etckeeper commit 		## para acturalizar los cambios que se ha hecho sobre /etc


	** tig
		>> apt-get install tig			## ejecutar 'tig' sobre un directorio con git y permite ver los commits


Prevenir ataque con 'fail2ban'

	Muchas veces los servidores están expuestos a ataques, fail2ban nos permite bloquear ataques.

	Instalación
		>> apt-get install fail2ban


	Los archivos de configuración son:
		/etc/fail2ban/fail2ban.conf
		/etc/fail2ban/jail.conf

	Filtros
		Para activar un filtro lo debes buscar y añadir la línea enabled = true, por ejemplo en nginx debes buscar el archivo
			etc/fail2ban/filter.d/nginx-http-auth.conf
	
	Restaurar el servicio
		>> fail2ban.service restart
			## despues de realizar un cambio en los filtros



Encriptación de datos

	'gpg' es un programa que maneja una serie de configuraciones para encriptación.

	Existe 2 tipos de encriptación:
		Simetrica: con la contraseña que encripto desencripto.
		Asimetrica: Como ssh que utiliza dos llaves una publica y una privada, con la publica se encripta y con la privada se 
					desencripta.

	## Para encriptar
		>> gpg -ca -o [archio de salida] [archivo a encriptar]

	## para desencriptar
		>> gpg -d [archivo]



Encontrar el dueño del paquete
		
	Para encontrar el dueño de un archivo podemos el comando
	 	>> dpkg -S [nombre del archivo]

	Para ver todos los archivos de un programa
		>> dpkg -l [nombre del paquete]


md5sum, integridad de archivos y paquetes
		
	md5sum permite sacar una suma binaria de un archivo con un hash y esto verifica si el archivo fue modificado	

	Calcular m5sum
		>> md5sum [nombre del archivo]


Como podemos monitorear servidores 

	